#!/bin/bash

SERVER="192.168.1.10:9091 --auth admin:admin"
DIR=~/bin/scripts/series/titles/

VERSION="0.0.6"

echo "down $VERSION - Copyleft (GPL v3) Julio Serrano 2016"
echo "Revisar nuevas series en elitetorrent y descargar las indicadas"
echo "según la misma estructura de clat."
echo

cd "$DIR"

function download {
	local name="$1"
	local line="$2"
	local series="$3"

	#Extraemos la url de la etiqueta href
	local url=`echo "$line" | grep '<a href="/torrent/' | grep "$name" | grep -Po 'href=".*?"' | sed 's/\(href="\|"\)//g'`
	echo ">>>Url: $url"
	echo ">>>Recuperando el magnet"
	#Extraemos el magnet.
	local magnet=`curl "http://www.elitetorrent.net$url" | grep magnet | grep -Po '"magnet:.*?"' | sed 's/\("magnet:\|"\)//g'`
	#echo ">$magnet<"
	while [[ $magnet == "" ]]; do
		echo "La recuperación del magnet ha fallado."
		echo "Esperando 5 segundos antes de reintentar..."
		sleep 5
		magnet=`curl "http://www.elitetorrent.net$url" | grep magnet | grep -Po '"magnet:.*?"' | sed 's/\("magnet:\|"\)//g'`
	done		

	echo ">>>magnet:$magnet"
	echo ">>>Añadiendo a transmission"

	folder=`cat "$DIR$series"`
	#Como quitamos "magnet:" de la cadena, después tenemos que aádir magnet:
	transmission-remote $SERVER --add "magnet:$magnet" --download-dir "$folder"
	#setDownloaded "$name"
}

function isSeries {
	local name="$1"
	local line="$2"
	local res=false

	#Recorremos el directorio de las series mismo de clat
	for serie in *; do
		#Si el nombre del archivo coincide con el de una serie
		if [[ $name == $serie* ]]; then
			echo ">>>Este archivo es de la serie $serie"
			res=$(isDownloaded "$name")
			if $res; then
				echo "    Ya lo tenemos"
			else
				echo "    No lo tenemos"
				#Llamamos a la funcion que descargará el archivo
				download "$name" "$line" "$serie"
			fi
			break
    	fi
	done 	
}

function isDownloaded {
	local filename="$1"
	local res=""
	declare -a parts

	let i=0
	for part in $filename; do
		parts[i]=$part
		let i++
	done

	size=${#parts[@]}
	let size--

	local name=""
	for ((i=0; i<$size; i++)); do
		name="$name${parts[i]} "
	done

	local episodio="${parts[$size]}"

	name=`unaccent utf-8 "$name"`

	echo "Nombre: $name, Episodio: $episodio" >&2

	#Le preguntamos a transmission si ya tiene el archivo
	res=`transmission-remote $SERVER --list | grep "$name" | grep "$episodio"`
	
	#echo "$res" >&2
	if [[ ${#res} > 0 ]]; then
		echo true
	else
		echo false
	fi
}

if [[ $1 = "" ]]; then
	urlfrom="http://www.elitetorrent.net/categoria/4/series"
elif [[ $1 == "-u" ]]; then
	urlfrom="$2"
else
	urlfrom="http://www.elitetorrent.net/busqueda/$1 $2 $3 $4 $5 $6 $7 $8 $9"
fi

echo  "Descargando portada de elitetorrent..."
curl "$urlfrom" | grep '<a href="/torrent/' > /tmp/elitetorrent.txt
FILESIZE=$(stat -c%s "/tmp/elitetorrent.txt")
while [[ $FILESIZE == 0 ]]; do
	echo "La descarga ha fallado."
	echo "Esperando 5 segundos antes de volver a intentarlo..."
	sleep 5
	curl "$urlfrom" | grep '<a href="/torrent/' > /tmp/elitetorrent.txt
	FILESIZE=$(stat -c%s "/tmp/elitetorrent.txt")
done
echo  "Descargada\n"

echo "Procesando..."
# Link filedescriptor 10 with stdin
exec 10<&0
# stdin replaced with a file supplied as a first argument
exec < /tmp/elitetorrent.txt

let count=0

while read line; do
	#Queremos la etiqueta title, pero sólo su contenido
	name=`echo "$line" | grep -Po 'title=".*?"' | sed 's/\(title="\|"\)//g'`
    echo $name
    ((count++))
    #Procesamos la serie. La variable line se necesitará después
    isSeries "$name" "$line"
done

echo Número de series procesadas: $count

# restore stdin from filedescriptor 10
# and close filedescriptor 10
exec 0<&10 10<&-
rm /tmp/elitetorrent.txt